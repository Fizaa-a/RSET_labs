def dfs(graph, node, visited):
    visited.add(node)
    print(node, end=" ")
    for neighbor in graph[node]:
        if neighbor not in visited:
            dfs(graph, neighbor, visited)

if __name__ == "__main__":
    graph = {
        'A': ['B', 'C'],
        'B': ['A', 'D', 'E'],
        'C': ['A', 'F'],
        'D': ['B'],
        'E': ['B', 'F'],
        'F': ['C', 'E']
    }
    start_node = input("Enter the starting node for DFS: ").upper()
    if start_node in graph:
        print(f"Depth-First Search (DFS) starting from node {start_node}:")
        visited = set()
        dfs(graph, start_node, visited)
    else:
        print(f"Node '{start_node}' not found in the graph.")

