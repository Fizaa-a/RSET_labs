def bfs(graph, start):
    visited = set()
    queue = [start]
    visited.add(start)
    while queue:
        node = queue.pop(0)
        print(node, end=" ")
        for neighbor in graph[node]:
            if neighbor not in visited:
                visited.add(neighbor)
                queue.append(neighbor)
if __name__ == "__main__":
    graph = {
        'A': ['B', 'C'],
        'B': ['A', 'D', 'E'],
        'C': ['A', 'F'],
        'D': ['B'],
        'E': ['B', 'F'],
        'F': ['C', 'E']
    }
    start_node = input("Enter the starting node for BFS: ").upper()
    if start_node in graph:
        print(f"Breadth-First Search (BFS) starting from node {start_node}:")
        bfs(graph, start_node)
    else:
        print(f"Node '{start_node}' not found in the graph.")
